#####################################################################
############################## PATH #################################
#####################################################################

{{ if eq .chezmoi.os "darwin" }}
  {{ if eq .chezmoi.arch "arm64" }}
export PATH="/opt/homebrew/sbin:/opt/homebrew/bin:$PATH"
  {{/* else if eq .chezmoi.arch "amd64" */}}
  {{ else }}
export PATH="/usr/local/sbin:/usr/local/bin:$PATH"
  {{ end }}
export PATH="/Applications/Docker.app/Contents/Resources/bin:$PATH"
{{ end }}

export PATH="$HOME/.local/bin:$PATH"

#####################################################################
############################## OMZ ##################################
#####################################################################
#
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
if [[ $(command -v starship) ]]; then
  ZSH_THEME=""
else
  ZSH_THEME="robbyrussell"
fi

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

{{ if .offline }}
zstyle ':omz:update' mode disabled
{{ end }}

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-autosuggestions
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#####################################################################
############################## Env ##################################
#####################################################################

export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
export EDITOR=nvim
export HOMEBREW_NO_AUTO_UPDATE=1
export XDG_CONFIG_HOME="$HOME/.config"
export SHELL="$(which zsh)"

if [[ $(command -v brew) ]] && [[ -d "$(brew --prefix)/opt/postgresql@15" ]]; then
  export PATH="$(brew --prefix)/opt/postgresql@15/bin:$PATH"
  export LDFLAGS="-L$(brew --prefix)/opt/postgresql@15/lib"
  export CPPFLAGS="-I$(brew --prefix)/opt/postgresql@15/include"
  export PKG_CONFIG_PATH="$(brew --prefix)/opt/postgresql@15/lib/pkgconfig"
fi

#####################################################################
############################# Tools #################################
#####################################################################

[ -f "$HOME/.fzf.zsh"      ] && source "$HOME/.fzf.zsh"
[ -f "$HOME/.cargo/env"    ] && source "$HOME/.cargo/env"
if [[ -f "$HOME/.asdf/asdf.sh" ]]; then 
  source "$HOME/.asdf/asdf.sh"
elif [[ $(command -v brew) ]] && [[ $(command -v asdf) ]]; then 
  source "$(brew --prefix)/opt/asdf/libexec/asdf.sh"
fi

[[ $(command -v starship) ]] && eval "$(starship init zsh)"

#####################################################################
################## Bindkey / Aliases / Functions ####################
#####################################################################

bindkey '^y' forward-word

function e() {
  if [[ $# -eq 0 ]] ; then
    nvim .
  else
    nvim "$@"
  fi
}

alias psp='ps aux | egrep -v "Evernote|Dropbox" | egrep -i --color "ruby|rails|rake|spring|puma|unicorn|delayed|vbox|python|neovim|phantomjs|beam|erlang|elixir|vim|coc"'

# Git => based in OhMyZsh, additions below
alias g='gst'
alias gdc='gdca'
alias gr="git log --graph --pretty=format:'%C(yellow)%h %ad %an%Cgreen%d %Creset%s' --date=short"
alias gt="git log --graph --simplify-by-decoration --pretty=format:'%d' --date=short --all"
function gtag() {
  git tag -a $1 -m $1
}

function bt() {
  if [[ $# -eq 0 ]] ; then
    bundle exec rspec
  else
    bundle exec rspec "$@"
  fi
}
alias btmo='git ls-files --modified --others spec | grep _spec.rb | tee /dev/tty | xargs bundle exec rspec'
alias btt="git status spec | grep -v 'deleted: ' | grep -o -E '\S+(_spec.rb|\/)$' | tee /dev/tty | xargs bundle exec rspec"
alias bth='git show --name-only --no-notes --oneline HEAD | grep _spec.rb | tee /dev/tty | xargs bundle exec rspec'
alias btf="fzf -m --bind enter:clear-selection+select-all+accept --query '_spec.rb$ ' | tee /dev/tty | xargs bundle exec rspec"
alias btof="bundle exec rspec --only-failures"

function st() {
  if [[ $# -eq 0 ]] ; then
    bundle exec spring rspec
  else
    bundle exec spring rspec "$@"
  fi
}
alias ss='bundle exec spring stop'
alias stmo='git ls-files --modified --others spec | grep _spec.rb | tee /dev/tty | xargs bundle exec spring rspec'
alias stt="git status spec | grep -v 'deleted: ' | grep -o -E '\S+(_spec.rb|\/)$' | tee /dev/tty | xargs bundle exec spring rspec"
alias sth='git show --name-only --no-notes --oneline HEAD | grep _spec.rb | tee /dev/tty | xargs bundle exec spring rspec'
alias stf="fzf -m --bind enter:clear-selection+select-all+accept --query '_spec.rb$ ' | tee /dev/tty | xargs bundle exec spring rspec"
alias stof="bundle exec spring rspec --only-failures"

function rmig() {
  bundle exec rake db:migrate RAILS_ENV=${1:-development}
}
function remig() {
  bundle exec rake db:migrate:redo RAILS_ENV=${1:-development}
}
function unmig() {
  bundle exec rake db:rollback RAILS_ENV=${1:-development}
}

alias cu='cd ~/workspace/cu'
alias dqs='cd ~/workspace/dqs'
alias fta='cd ~/workspace/fta'
alias kbt='cd ~/workspace/kbt'
alias wiki='e ~/bin/wiki'

#####################################################################
######################### Shell Starter #############################
#####################################################################

{{ if .remote }}
export ZELLIJ_AUTO_ATTACH=true
export ZELLIJ_AUTO_EXIT=true

if [[ $(command -v zellij) ]] && [[ -z "$ZELLIJ" ]]; then
    if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
        zellij attach -c
    else
        zellij
    fi

    if [[ "$ZELLIJ_AUTO_EXIT" == "true" ]]; then
        exit
    fi
fi
{{ end }}
